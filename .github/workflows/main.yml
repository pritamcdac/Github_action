# name: Event-Based Workflow
 
# on:

#   # Trigger the workflow on push to the main branch

#   push:

#     branches:

#       - master

#     # Trigger on any tag push

#     tags:

#       - 'v*'  # Triggers on any tag starting with 'v' (e.g., v1.0.0)
 
#   # Trigger the workflow on a pull request to the main branch

#   pull_request:

#     branches:

#       - master
 
#   # Trigger the workflow on issue comment event

#   issue_comment:

#     types: [created]
 
#   # Trigger the workflow on a release event

#   release:

#     types: [created]
 
#   # Trigger the workflow on a cron schedule (runs every day at midnight UTC)

#   schedule:

#     - cron: '* * * * *'  # This will trigger at midnight UTC every day
 
# jobs:

#   run_echo_commands:

#     runs-on: ubuntu-latest
 
#     steps:

#       # Checkout the code

#       - name: Checkout code

#         uses: actions/checkout@v3
 
#       # Triggered by a push to the main branch

#       - name: Echo on push to main

#         if: github.event_name == 'push' && github.ref == 'refs/heads/master'

#         run: |

#           echo "This is a push event to the main branch!"
 
#       # Triggered by a push event for a tag (e.g., v1.0.0)

#       - name: Echo on tag push

#         if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')

#         run: |

#           echo "A new tag was pushed: ${{ github.ref }}"
 
#       # Triggered by a pull request to the main branch

#       - name: Echo on pull request to main
     
#         if: github.event_name == 'pull_request' && github.ref == 'refs/heads/master'
#         run: |
#           echo "This is a pull request event to the main branch!"

 
#       # Triggered when an issue comment is created

#       - name: Echo on issue comment

#         if: github.event_name == 'issue_comment' && github.event.action == 'created'

#         run: |

#           echo "An issue comment was created: ${{ github.event.comment.body }}"
 
#       # Triggered when a release is created

#       - name: Echo on release creation

#         if: github.event_name == 'release' && github.event.action == 'created'

#         run: |

#           echo "A new release was created with the tag: ${{ github.event.release.tag_name }}"
 
#       # Triggered by a scheduled cron event (daily at midnight UTC)

#       - name: Echo on cron event

#         if: github.event_name == 'schedule'

#         run: |

#           echo "This is a scheduled event triggered by the cron schedule!"


name: Multi-Event Workflow

on:
  # Manual trigger
  workflow_dispatch:
    inputs:
      name:
        description: 'Pritam as a '
        required: true
        default: 'User'

  # Trigger on push to any branch
  push:
    branches:
      - '*'

  # Trigger on pull request creation or update
  pull_request:
    branches:
      - '*'

  # Scheduled trigger (daily at 6 AM UTC)
  schedule:
    - cron: '0/ 1* * * *'

  # Trigger on other webhook events
  check_suite:
  deployment:

jobs:
  multi-event-job:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Identify the Event
      - name: Identify Event
        run: |
          echo "Workflow triggered by: ${{ github.event_name }}"

      # Step 2: Handle workflow_dispatch (manual trigger)
      - name: Handle Manual Trigger
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          echo "Hello, ${{ github.event.inputs.name }}! This is a manual trigger."

      # Step 3: Handle Push Event
      - name: Handle Push Event
        if: ${{ github.event_name == 'push' }}
        run: |
          echo "Code pushed to branch: ${{ github.ref_name }}"

      # Step 4: Handle Pull Request Event
      - name: Handle Pull Request
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo "Pull Request #${{ github.event.pull_request.number }} opened by: ${{ github.event.pull_request.user.login }}"

      # Step 5: Handle Scheduled Event
      - name: Handle Schedule
        if: ${{ github.event_name == 'schedule' }}
        run: |
          echo "This is a scheduled run at $(date -u)"

      # Step 6: Handle Check Suite Event
      - name: Handle Check Suite
        if: ${{ github.event_name == 'check_suite' }}
        run: |
          echo "Check Suite event received: ${{ github.event.action }}"

      # Step 7: Handle Deployment Event
      - name: Handle Deployment Event
        if: ${{ github.event_name == 'deployment' }}
        run: |
          echo "Deployment triggered for environment: ${{ github.event.deployment.environment }}"
          echo "Deployment description: ${{ github.event.deployment.description }}"
